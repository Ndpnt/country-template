name: Changelog

on:
  pull_request:
    types: [ assigned, opened, reopened, synchronize, ready_for_review ]
  workflow_dispatch:
  workflow_call:
    outputs:
      status:
        description: A variable signaling that there are functional changes in the changeset
        value: ${{ jobs.check-for-functional-changes.outputs.status }}

jobs:
  # lint-files:
  #   uses: "./.github/workflows/lint-files.yml"

  tests:
    uses: "./.github/workflows/tests.yml"
  
  check-version-and-changelog:
    runs-on: ubuntu-20.04
    needs: [ tests ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.9
      
      - name: Check version number has been properly updated
        run: "${GITHUB_WORKSPACE}/.github/is-version-number-acceptable.sh"

  # GitHub Actions does not have a halt job option, to stop from deploying if no functional changes were found.
  # We build a separate job to substitute the halt option.
  # The `deploy` job is dependent on the output of the `check-for-functional-changes`job.
  check-for-functional-changes:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main' # Only triggered for the `main` branch
    needs: [ check-version-and-changelog ]
    outputs:
      status: ${{ steps.stop-early.outputs.status }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.9
      
      - id: stop-early
        run: if "${GITHUB_WORKSPACE}/.github/has-functional-changes.sh" ; then echo "::set-output name=status::success" ; fi
